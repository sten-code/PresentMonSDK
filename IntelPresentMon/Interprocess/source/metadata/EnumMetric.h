// WARNING: This file is automatically generated, modify IntelPresentMon\metrics.csv instead.
//
// enum annotation (enum_name_fragment, key_name_fragment, name, short_name, description)
#define ENUM_KEY_LIST_METRIC(X_) \
		X_(METRIC, APPLICATION, "Application", "Application", "The name of the process that generated the frame.") \
		X_(METRIC, SWAP_CHAIN_ADDRESS, "Swap Chain Address", "SwapChainAddress", "The address of the swap chain used to present the frame.") \
		X_(METRIC, PRESENT_RUNTIME, "Present Runtime", "PresentRuntime", "The API used to present the frame.") \
		X_(METRIC, SYNC_INTERVAL, "Sync Interval", "SyncInterval", "The sync interval provided by the application when presenting the frame. Note: this value may be modified later by the driver, e.g., based on control panel overrides.") \
		X_(METRIC, PRESENT_FLAGS, "Present Flags", "PresentFlags", "The present flags provided by the application when presenting the frame.") \
		X_(METRIC, ALLOWS_TEARING, "Allows Tearing", "AllowsTearing", "1 if partial frames might be displayed on the screen, or 0 if only full frames are displayed.") \
		X_(METRIC, PRESENT_MODE, "Present Mode", "PresentMode", "The presentation mode used by the system for this frame.  See the table below for more details.") \
		X_(METRIC, FRAME_TYPE, "Frame Type", "FrameType", "Whether the frame was rendered by the application or generated by a driver/SDK.") \
		X_(METRIC, CPU_START_TIME, "CPU Start Time", "CPUStartTime", "The time the CPU started working on this frame.") \
		X_(METRIC, CPU_START_QPC, "CPU Start QPC", "CPUStartQPC", "The time the CPU started working on this frame, as a QueryPerformanceCounter() value.") \
		X_(METRIC, CPU_FRAME_TIME, "Frame Time", "FrameTime", "How long it took from the start of this frame until the CPU started working on the next frame.") \
		X_(METRIC, CPU_BUSY, "CPU Busy", "CPUBusy", "How long the CPU spent working on this frame before presenting it.") \
		X_(METRIC, CPU_WAIT, "CPU Wait", "CPUWait", "How long the CPU spent waiting before starting the next frame.") \
		X_(METRIC, GPU_LATENCY, "GPU Latency", "GPULatency", "How long it took from the start of this frame until the GPU started working on it.") \
		X_(METRIC, GPU_TIME, "GPU Time", "GPUTime", "The total amount of time that GPU was working on this frame.") \
		X_(METRIC, GPU_BUSY, "GPU Busy", "GPUBusy", "How long the GPU was actively working on this frame (i.e., the time during which at least one GPU engine is executing work from the target process).") \
		X_(METRIC, GPU_WAIT, "GPU Wait", "GPUWait", "How long the GPU was idle while working on this frame.") \
		X_(METRIC, DISPLAY_LATENCY, "Display Latency", "DisplayLatency", "How long it took from the start of this frame until the frame was displayed on the screen.") \
		X_(METRIC, DISPLAYED_TIME, "Displayed Time", "DisplayedTime", "How long the frame was displayed on the screen, or 'NA' if the frame was not displayed.") \
		X_(METRIC, ANIMATION_ERROR, "Animation Error", "AnimationError", "The difference between the previous frame's CPU delta and display delta.") \
		X_(METRIC, ANIMATION_TIME, "Animation Time", "AnimationTime", "The time the CPU started animation work on this frame.") \
		X_(METRIC, CLICK_TO_PHOTON_LATENCY, "Click-To-Photon Latency", "ClickToPhotonLatency", "How long it took from the earliest mouse click that contributed to this frame until this frame was displayed.") \
		X_(METRIC, ALL_INPUT_TO_PHOTON_LATENCY, "All-Input-To-Photon Latency", "AllInputToPhotonLatency", "How long it took from the earliest keyboard or mouse interaction that contributed to this frame until this frame was displayed.") \
		X_(METRIC, DISPLAYED_FPS, "Displayed FPS", "DisplayedFPS", "The rate at which new frames are being displayed on the screen.") \
		X_(METRIC, APPLICATION_FPS, "Application FPS", "ApplicationFPS", "The rate at which the application is rendering and displaying new frames to the screen.") \
		X_(METRIC, PRESENTED_FPS, "Presented FPS", "PresentedFPS", "The rate at which the application is calling Present().") \
		X_(METRIC, DROPPED_FRAMES, "Dropped Frames", "DroppedFrames", "Indicates if the frame was not displayed.") \
		X_(METRIC, GPU_VENDOR, "GPU Vendor", "GPUVendor", "Vendor name of the GPU.") \
		X_(METRIC, GPU_NAME, "GPU Name", "GPUName", "Device name of the GPU.") \
		X_(METRIC, CPU_VENDOR, "CPU Vendor", "CPUVendor", "Vendor name of the CPU.") \
		X_(METRIC, CPU_NAME, "CPU Name", "CPUName", "Device name of the CPU.") \
		X_(METRIC, GPU_SUSTAINED_POWER_LIMIT, "GPU Sustained Power Limit", "GPUSustainedPowerLimit", "Sustained power limit of the GPU.") \
		X_(METRIC, GPU_POWER, "GPU Power", "GPUPower", "Power consumed by the graphics adapter.") \
		X_(METRIC, GPU_VOLTAGE, "GPU Voltage", "GPUVoltage", "Voltage consumed by the graphics adapter.") \
		X_(METRIC, GPU_FREQUENCY, "GPU Frequency", "GPUFrequency", "Clock speed of the GPU cores.") \
		X_(METRIC, GPU_TEMPERATURE, "GPU Temperature", "GPUTemperature", "Temperature of the GPU.") \
		X_(METRIC, GPU_FAN_SPEED, "GPU Fan Speed", "GPUFanSpeed", "Rate at which a GPU cooler fan is rotating.") \
		X_(METRIC, GPU_UTILIZATION, "GPU Utilization", "GPUUtilization", "Amount of GPU processing capacity being used.") \
		X_(METRIC, GPU_RENDER_COMPUTE_UTILIZATION, "3D/Compute Utilization", "3D/ComputeUtilization", "Amount of 3D/Compute processing capacity being used.") \
		X_(METRIC, GPU_MEDIA_UTILIZATION, "Media Utilization", "MediaUtilization", "Amount of media processing capacity being used.") \
		X_(METRIC, GPU_POWER_LIMITED, "GPU Power Limited", "GPUPowerLimited", "GPU frequency is being limited because GPU is exceeding maximum power limits.") \
		X_(METRIC, GPU_TEMPERATURE_LIMITED, "GPU Temperature Limited", "GPUTemperatureLimited", "GPU frequency is being limited because GPU is exceeding maximum temperature limits.") \
		X_(METRIC, GPU_CURRENT_LIMITED, "GPU Current Limited", "GPUCurrentLimited", "GPU frequency is being limited because GPU is exceeding maximum current limits.") \
		X_(METRIC, GPU_VOLTAGE_LIMITED, "GPU Voltage Limited", "GPUVoltageLimited", "GPU frequency is being limited because GPU is exceeding maximum voltage limits.") \
		X_(METRIC, GPU_UTILIZATION_LIMITED, "GPU Utilization Limited", "GPUUtilizationLimited", "GPU frequency is being limited due to low GPU utilization.") \
		X_(METRIC, GPU_MEM_POWER, "GPU Memory Power", "GPUMemoryPower", "Power consumed by the GPU memory.") \
		X_(METRIC, GPU_MEM_VOLTAGE, "GPU Memory Voltage", "GPUMemoryVoltage", "Voltage consumed by the GPU memory.") \
		X_(METRIC, GPU_MEM_FREQUENCY, "GPU Memory Frequency", "GPUMemoryFrequency", "Clock speed of the GPU memory.") \
		X_(METRIC, GPU_MEM_EFFECTIVE_FREQUENCY, "GPU Memory Effective Frequency", "GPUMemoryEffectiveFrequency", "Effective data transfer rate GPU memory can sustain.") \
		X_(METRIC, GPU_MEM_TEMPERATURE, "GPU Memory Temperature", "GPUMemoryTemperature", "Temperature of the GPU memory.") \
		X_(METRIC, GPU_MEM_SIZE, "GPU Memory Size", "GPUMemorySize", "Size of the GPU memory.") \
		X_(METRIC, GPU_MEM_USED, "GPU Memory Size Used", "GPUMemorySizeUsed", "Amount of used GPU memory.") \
		X_(METRIC, GPU_MEM_UTILIZATION, "GPU Memory Utilization", "GPUMemoryUtilization", "Percent of GPU memory used.") \
		X_(METRIC, GPU_MEM_MAX_BANDWIDTH, "GPU Memory Max Bandwidth", "GPUMemoryMaxBandwidth", "Maximum total GPU memory bandwidth.") \
		X_(METRIC, GPU_MEM_WRITE_BANDWIDTH, "GPU Memory Write Bandwidth", "GPUMemoryWriteBandwidth", "Maximum GPU memory bandwidth for writing.") \
		X_(METRIC, GPU_MEM_READ_BANDWIDTH, "GPU Memory Read Bandwidth", "GPUMemoryReadBandwidth", "Maximum GPU memory bandwidth for reading.") \
		X_(METRIC, GPU_MEM_POWER_LIMITED, "GPU Memory Power Limited", "GPUMemoryPowerLimited", "Memory frequency is being limited because the memory modules are exceeding the maximum power limits.") \
		X_(METRIC, GPU_MEM_TEMPERATURE_LIMITED, "GPU Memory Temperature Limited", "GPUMemoryTemperatureLimited", "Memory frequency is being limited because the memory modules are exceeding the maximum temperature limits.") \
		X_(METRIC, GPU_MEM_CURRENT_LIMITED, "GPU Memory Current Limited", "GPUMemoryCurrentLimited", "Memory frequency is being limited because the memory modules are exceeding the maximum current limits.") \
		X_(METRIC, GPU_MEM_VOLTAGE_LIMITED, "GPU Memory Voltage Limited", "GPUMemoryVoltageLimited", "Memory frequency is being limited because the memory modules are exceeding the maximum voltage limits.") \
		X_(METRIC, GPU_MEM_UTILIZATION_LIMITED, "GPU Memory Utilization Limited", "GPUMemoryUtilizationLimited", "Memory frequency is being limited due to low memory traffic.") \
		X_(METRIC, CPU_UTILIZATION, "CPU Utilization", "CPUUtilization", "Amount of CPU processing capacity being used.") \
		X_(METRIC, CPU_POWER_LIMIT, "CPU Power Limit", "CPUPowerLimit", "Power limit of the CPU.") \
		X_(METRIC, CPU_POWER, "CPU Power", "CPUPower", "Power consumed by the CPU.") \
		X_(METRIC, CPU_TEMPERATURE, "CPU Temperature", "CPUTemperature", "Temperature of the CPU.") \
		X_(METRIC, CPU_FREQUENCY, "CPU Frequency", "CPUFrequency", "Clock speed of the CPU.") \
		X_(METRIC, CPU_CORE_UTILITY, "CPU Core Utility", "CPUCoreUtility", "Amount of CPU processing utility being used per core.") \
		X_(METRIC, INSTRUMENTED_LATENCY, "Instrumented Latency", "InstrumentedLatency", "Instrumented Frame Start To Display Latency")
